#!/usr/bin/env python3
# -*- coding: utf-8 -*-

#
# SPDX-License-Identifier: GPL-3.0
#
# GNU Radio Python Flow Graph
# Title: Not titled yet
# GNU Radio version: v3.11.0.0git-810-g1ecb8565

from PyQt5 import Qt
from gnuradio import qtgui
from gnuradio import blocks
from gnuradio import gr
from gnuradio.filter import firdes
from gnuradio.fft import window
import sys
import signal
from PyQt5 import Qt
from argparse import ArgumentParser
from gnuradio.eng_arg import eng_float, intx
from gnuradio import eng_notation
import Practica1_epy_block_0_0 as epy_block_0_0  # embedded python block
import Practica1_epy_block_1_0 as epy_block_1_0  # embedded python block
import Practica1_epy_block_2 as epy_block_2  # embedded python block
import sip
import threading



class Practica1(gr.top_block, Qt.QWidget):

    def __init__(self):
        gr.top_block.__init__(self, "Not titled yet", catch_exceptions=True)
        Qt.QWidget.__init__(self)
        self.setWindowTitle("Not titled yet")
        qtgui.util.check_set_qss()
        try:
            self.setWindowIcon(Qt.QIcon.fromTheme('gnuradio-grc'))
        except BaseException as exc:
            print(f"Qt GUI: Could not set Icon: {str(exc)}", file=sys.stderr)
        self.top_scroll_layout = Qt.QVBoxLayout()
        self.setLayout(self.top_scroll_layout)
        self.top_scroll = Qt.QScrollArea()
        self.top_scroll.setFrameStyle(Qt.QFrame.NoFrame)
        self.top_scroll_layout.addWidget(self.top_scroll)
        self.top_scroll.setWidgetResizable(True)
        self.top_widget = Qt.QWidget()
        self.top_scroll.setWidget(self.top_widget)
        self.top_layout = Qt.QVBoxLayout(self.top_widget)
        self.top_grid_layout = Qt.QGridLayout()
        self.top_layout.addLayout(self.top_grid_layout)

        self.settings = Qt.QSettings("gnuradio/flowgraphs", "Practica1")

        try:
            geometry = self.settings.value("geometry")
            if geometry:
                self.restoreGeometry(geometry)
        except BaseException as exc:
            print(f"Qt GUI: Could not restore geometry: {str(exc)}", file=sys.stderr)
        self.flowgraph_started = threading.Event()

        ##################################################
        # Variables
        ##################################################
        self.samp_rate = samp_rate = 1000
        self.puntos = puntos = 500

        ##################################################
        # Blocks
        ##################################################

        self.qtgui_time_sink_x_0_0_1 = qtgui.time_sink_f(
            puntos, #size
            samp_rate*3, #samp_rate
            "ruido", #name
            1, #number of inputs
            None # parent
        )
        self.qtgui_time_sink_x_0_0_1.set_update_time(0.1)
        self.qtgui_time_sink_x_0_0_1.set_y_axis(-1, 1)

        self.qtgui_time_sink_x_0_0_1.set_y_label('Amplitude', "")

        self.qtgui_time_sink_x_0_0_1.enable_tags(True)
        self.qtgui_time_sink_x_0_0_1.set_trigger_mode(qtgui.TRIG_MODE_FREE, qtgui.TRIG_SLOPE_POS, 0.0, 0, 0, "")
        self.qtgui_time_sink_x_0_0_1.enable_autoscale(True)
        self.qtgui_time_sink_x_0_0_1.enable_grid(False)
        self.qtgui_time_sink_x_0_0_1.enable_axis_labels(True)
        self.qtgui_time_sink_x_0_0_1.enable_control_panel(False)
        self.qtgui_time_sink_x_0_0_1.enable_stem_plot(False)


        labels = ['Signal 1', 'Signal 2', 'Signal 3', 'Signal 4', 'Signal 5',
            'Signal 6', 'Signal 7', 'Signal 8', 'Signal 9', 'Signal 10']
        widths = [1, 1, 1, 1, 1,
            1, 1, 1, 1, 1]
        colors = ['blue', 'red', 'green', 'black', 'cyan',
            'magenta', 'yellow', 'dark red', 'dark green', 'dark blue']
        alphas = [1.0, 1.0, 1.0, 1.0, 1.0,
            1.0, 1.0, 1.0, 1.0, 1.0]
        styles = [1, 1, 1, 1, 1,
            1, 1, 1, 1, 1]
        markers = [-1, -1, -1, -1, -1,
            -1, -1, -1, -1, -1]


        for i in range(1):
            if len(labels[i]) == 0:
                self.qtgui_time_sink_x_0_0_1.set_line_label(i, "Data {0}".format(i))
            else:
                self.qtgui_time_sink_x_0_0_1.set_line_label(i, labels[i])
            self.qtgui_time_sink_x_0_0_1.set_line_width(i, widths[i])
            self.qtgui_time_sink_x_0_0_1.set_line_color(i, colors[i])
            self.qtgui_time_sink_x_0_0_1.set_line_style(i, styles[i])
            self.qtgui_time_sink_x_0_0_1.set_line_marker(i, markers[i])
            self.qtgui_time_sink_x_0_0_1.set_line_alpha(i, alphas[i])

        self._qtgui_time_sink_x_0_0_1_win = sip.wrapinstance(self.qtgui_time_sink_x_0_0_1.qwidget(), Qt.QWidget)
        self.top_layout.addWidget(self._qtgui_time_sink_x_0_0_1_win)
        self.qtgui_time_sink_x_0_0_0 = qtgui.time_sink_f(
            puntos, #size
            samp_rate*3, #samp_rate
            "Filtrado", #name
            1, #number of inputs
            None # parent
        )
        self.qtgui_time_sink_x_0_0_0.set_update_time(0.10)
        self.qtgui_time_sink_x_0_0_0.set_y_axis(-1, 1)

        self.qtgui_time_sink_x_0_0_0.set_y_label('Amplitude', "")

        self.qtgui_time_sink_x_0_0_0.enable_tags(True)
        self.qtgui_time_sink_x_0_0_0.set_trigger_mode(qtgui.TRIG_MODE_FREE, qtgui.TRIG_SLOPE_POS, 0.0, 0, 0, "")
        self.qtgui_time_sink_x_0_0_0.enable_autoscale(False)
        self.qtgui_time_sink_x_0_0_0.enable_grid(False)
        self.qtgui_time_sink_x_0_0_0.enable_axis_labels(True)
        self.qtgui_time_sink_x_0_0_0.enable_control_panel(False)
        self.qtgui_time_sink_x_0_0_0.enable_stem_plot(False)


        labels = ['Signal 1', 'Signal 2', 'Signal 3', 'Signal 4', 'Signal 5',
            'Signal 6', 'Signal 7', 'Signal 8', 'Signal 9', 'Signal 10']
        widths = [1, 1, 1, 1, 1,
            1, 1, 1, 1, 1]
        colors = ['blue', 'red', 'green', 'black', 'cyan',
            'magenta', 'yellow', 'dark red', 'dark green', 'dark blue']
        alphas = [1.0, 1.0, 1.0, 1.0, 1.0,
            1.0, 1.0, 1.0, 1.0, 1.0]
        styles = [1, 1, 1, 1, 1,
            1, 1, 1, 1, 1]
        markers = [-1, -1, -1, -1, -1,
            -1, -1, -1, -1, -1]


        for i in range(1):
            if len(labels[i]) == 0:
                self.qtgui_time_sink_x_0_0_0.set_line_label(i, "Data {0}".format(i))
            else:
                self.qtgui_time_sink_x_0_0_0.set_line_label(i, labels[i])
            self.qtgui_time_sink_x_0_0_0.set_line_width(i, widths[i])
            self.qtgui_time_sink_x_0_0_0.set_line_color(i, colors[i])
            self.qtgui_time_sink_x_0_0_0.set_line_style(i, styles[i])
            self.qtgui_time_sink_x_0_0_0.set_line_marker(i, markers[i])
            self.qtgui_time_sink_x_0_0_0.set_line_alpha(i, alphas[i])

        self._qtgui_time_sink_x_0_0_0_win = sip.wrapinstance(self.qtgui_time_sink_x_0_0_0.qwidget(), Qt.QWidget)
        self.top_layout.addWidget(self._qtgui_time_sink_x_0_0_0_win)
        self.qtgui_time_sink_x_0_0 = qtgui.time_sink_f(
            puntos, #size
            samp_rate*3, #samp_rate
            "Con ruido", #name
            1, #number of inputs
            None # parent
        )
        self.qtgui_time_sink_x_0_0.set_update_time(0.10)
        self.qtgui_time_sink_x_0_0.set_y_axis(-1, 1)

        self.qtgui_time_sink_x_0_0.set_y_label('Amplitude', "")

        self.qtgui_time_sink_x_0_0.enable_tags(True)
        self.qtgui_time_sink_x_0_0.set_trigger_mode(qtgui.TRIG_MODE_FREE, qtgui.TRIG_SLOPE_POS, 0.0, 0, 0, "")
        self.qtgui_time_sink_x_0_0.enable_autoscale(False)
        self.qtgui_time_sink_x_0_0.enable_grid(False)
        self.qtgui_time_sink_x_0_0.enable_axis_labels(True)
        self.qtgui_time_sink_x_0_0.enable_control_panel(False)
        self.qtgui_time_sink_x_0_0.enable_stem_plot(False)


        labels = ['Signal 1', 'Signal 2', 'Signal 3', 'Signal 4', 'Signal 5',
            'Signal 6', 'Signal 7', 'Signal 8', 'Signal 9', 'Signal 10']
        widths = [1, 1, 1, 1, 1,
            1, 1, 1, 1, 1]
        colors = ['blue', 'red', 'green', 'black', 'cyan',
            'magenta', 'yellow', 'dark red', 'dark green', 'dark blue']
        alphas = [1.0, 1.0, 1.0, 1.0, 1.0,
            1.0, 1.0, 1.0, 1.0, 1.0]
        styles = [1, 1, 1, 1, 1,
            1, 1, 1, 1, 1]
        markers = [-1, -1, -1, -1, -1,
            -1, -1, -1, -1, -1]


        for i in range(1):
            if len(labels[i]) == 0:
                self.qtgui_time_sink_x_0_0.set_line_label(i, "Data {0}".format(i))
            else:
                self.qtgui_time_sink_x_0_0.set_line_label(i, labels[i])
            self.qtgui_time_sink_x_0_0.set_line_width(i, widths[i])
            self.qtgui_time_sink_x_0_0.set_line_color(i, colors[i])
            self.qtgui_time_sink_x_0_0.set_line_style(i, styles[i])
            self.qtgui_time_sink_x_0_0.set_line_marker(i, markers[i])
            self.qtgui_time_sink_x_0_0.set_line_alpha(i, alphas[i])

        self._qtgui_time_sink_x_0_0_win = sip.wrapinstance(self.qtgui_time_sink_x_0_0.qwidget(), Qt.QWidget)
        self.top_layout.addWidget(self._qtgui_time_sink_x_0_0_win)
        self.qtgui_time_sink_x_0 = qtgui.time_sink_f(
            puntos, #size
            samp_rate*3, #samp_rate
            "Sin ruido", #name
            1, #number of inputs
            None # parent
        )
        self.qtgui_time_sink_x_0.set_update_time(0.10)
        self.qtgui_time_sink_x_0.set_y_axis(-1, 1)

        self.qtgui_time_sink_x_0.set_y_label('Amplitude', "")

        self.qtgui_time_sink_x_0.enable_tags(True)
        self.qtgui_time_sink_x_0.set_trigger_mode(qtgui.TRIG_MODE_FREE, qtgui.TRIG_SLOPE_POS, 0.0, 0, 0, "")
        self.qtgui_time_sink_x_0.enable_autoscale(True)
        self.qtgui_time_sink_x_0.enable_grid(False)
        self.qtgui_time_sink_x_0.enable_axis_labels(True)
        self.qtgui_time_sink_x_0.enable_control_panel(False)
        self.qtgui_time_sink_x_0.enable_stem_plot(False)


        labels = ['Signal 1', 'Signal 2', 'Signal 3', 'Signal 4', 'Signal 5',
            'Signal 6', 'Signal 7', 'Signal 8', 'Signal 9', 'Signal 10']
        widths = [1, 1, 1, 1, 1,
            1, 1, 1, 1, 1]
        colors = ['blue', 'red', 'green', 'black', 'cyan',
            'magenta', 'yellow', 'dark red', 'dark green', 'dark blue']
        alphas = [1.0, 1.0, 1.0, 1.0, 1.0,
            1.0, 1.0, 1.0, 1.0, 1.0]
        styles = [1, 1, 1, 1, 1,
            1, 1, 1, 1, 1]
        markers = [-1, -1, -1, -1, -1,
            -1, -1, -1, -1, -1]


        for i in range(1):
            if len(labels[i]) == 0:
                self.qtgui_time_sink_x_0.set_line_label(i, "Data {0}".format(i))
            else:
                self.qtgui_time_sink_x_0.set_line_label(i, labels[i])
            self.qtgui_time_sink_x_0.set_line_width(i, widths[i])
            self.qtgui_time_sink_x_0.set_line_color(i, colors[i])
            self.qtgui_time_sink_x_0.set_line_style(i, styles[i])
            self.qtgui_time_sink_x_0.set_line_marker(i, markers[i])
            self.qtgui_time_sink_x_0.set_line_alpha(i, alphas[i])

        self._qtgui_time_sink_x_0_win = sip.wrapinstance(self.qtgui_time_sink_x_0.qwidget(), Qt.QWidget)
        self.top_layout.addWidget(self._qtgui_time_sink_x_0_win)
        self.qtgui_number_sink_4 = qtgui.number_sink(
            gr.sizeof_float,
            0,
            qtgui.NUM_GRAPH_HORIZ,
            1,
            None # parent
        )
        self.qtgui_number_sink_4.set_update_time(0.10)
        self.qtgui_number_sink_4.set_title("Desviaciòn estandar")

        labels = ["Desviaciòn estandar", '', '', '', '',
            '', '', '', '', '']
        units = ['', '', '', '', '',
            '', '', '', '', '']
        colors = [("black", "black"), ("black", "black"), ("black", "black"), ("black", "black"), ("black", "black"),
            ("black", "black"), ("black", "black"), ("black", "black"), ("black", "black"), ("black", "black")]
        factor = [1, 1, 1, 1, 1,
            1, 1, 1, 1, 1]

        for i in range(1):
            self.qtgui_number_sink_4.set_min(i, -1)
            self.qtgui_number_sink_4.set_max(i, 1)
            self.qtgui_number_sink_4.set_color(i, colors[i][0], colors[i][1])
            if len(labels[i]) == 0:
                self.qtgui_number_sink_4.set_label(i, "Data {0}".format(i))
            else:
                self.qtgui_number_sink_4.set_label(i, labels[i])
            self.qtgui_number_sink_4.set_unit(i, units[i])
            self.qtgui_number_sink_4.set_factor(i, factor[i])

        self.qtgui_number_sink_4.enable_autoscale(False)
        self._qtgui_number_sink_4_win = sip.wrapinstance(self.qtgui_number_sink_4.qwidget(), Qt.QWidget)
        self.top_layout.addWidget(self._qtgui_number_sink_4_win)
        self.qtgui_number_sink_3 = qtgui.number_sink(
            gr.sizeof_float,
            0,
            qtgui.NUM_GRAPH_HORIZ,
            1,
            None # parent
        )
        self.qtgui_number_sink_3.set_update_time(0.10)
        self.qtgui_number_sink_3.set_title("Potencia Promedio")

        labels = ["Potencia Promedio", '', '', '', '',
            '', '', '', '', '']
        units = ['', '', '', '', '',
            '', '', '', '', '']
        colors = [("black", "black"), ("black", "black"), ("black", "black"), ("black", "black"), ("black", "black"),
            ("black", "black"), ("black", "black"), ("black", "black"), ("black", "black"), ("black", "black")]
        factor = [1, 1, 1, 1, 1,
            1, 1, 1, 1, 1]

        for i in range(1):
            self.qtgui_number_sink_3.set_min(i, -1)
            self.qtgui_number_sink_3.set_max(i, 1)
            self.qtgui_number_sink_3.set_color(i, colors[i][0], colors[i][1])
            if len(labels[i]) == 0:
                self.qtgui_number_sink_3.set_label(i, "Data {0}".format(i))
            else:
                self.qtgui_number_sink_3.set_label(i, labels[i])
            self.qtgui_number_sink_3.set_unit(i, units[i])
            self.qtgui_number_sink_3.set_factor(i, factor[i])

        self.qtgui_number_sink_3.enable_autoscale(False)
        self._qtgui_number_sink_3_win = sip.wrapinstance(self.qtgui_number_sink_3.qwidget(), Qt.QWidget)
        self.top_layout.addWidget(self._qtgui_number_sink_3_win)
        self.qtgui_number_sink_2 = qtgui.number_sink(
            gr.sizeof_float,
            0,
            qtgui.NUM_GRAPH_HORIZ,
            1,
            None # parent
        )
        self.qtgui_number_sink_2.set_update_time(0.10)
        self.qtgui_number_sink_2.set_title("RMS")

        labels = ["RMS", '', '', '', '',
            '', '', '', '', '']
        units = ['', '', '', '', '',
            '', '', '', '', '']
        colors = [("black", "black"), ("black", "black"), ("black", "black"), ("black", "black"), ("black", "black"),
            ("black", "black"), ("black", "black"), ("black", "black"), ("black", "black"), ("black", "black")]
        factor = [1, 1, 1, 1, 1,
            1, 1, 1, 1, 1]

        for i in range(1):
            self.qtgui_number_sink_2.set_min(i, -1)
            self.qtgui_number_sink_2.set_max(i, 1)
            self.qtgui_number_sink_2.set_color(i, colors[i][0], colors[i][1])
            if len(labels[i]) == 0:
                self.qtgui_number_sink_2.set_label(i, "Data {0}".format(i))
            else:
                self.qtgui_number_sink_2.set_label(i, labels[i])
            self.qtgui_number_sink_2.set_unit(i, units[i])
            self.qtgui_number_sink_2.set_factor(i, factor[i])

        self.qtgui_number_sink_2.enable_autoscale(False)
        self._qtgui_number_sink_2_win = sip.wrapinstance(self.qtgui_number_sink_2.qwidget(), Qt.QWidget)
        self.top_layout.addWidget(self._qtgui_number_sink_2_win)
        self.qtgui_number_sink_0_2 = qtgui.number_sink(
            gr.sizeof_float,
            0,
            qtgui.NUM_GRAPH_HORIZ,
            1,
            None # parent
        )
        self.qtgui_number_sink_0_2.set_update_time(0.10)
        self.qtgui_number_sink_0_2.set_title("Media Cuadratica")

        labels = ["Media acum", '', '', '', '',
            '', '', '', '', '']
        units = ['', '', '', '', '',
            '', '', '', '', '']
        colors = [("black", "black"), ("black", "black"), ("black", "black"), ("black", "black"), ("black", "black"),
            ("black", "black"), ("black", "black"), ("black", "black"), ("black", "black"), ("black", "black")]
        factor = [1, 1, 1, 1, 1,
            1, 1, 1, 1, 1]

        for i in range(1):
            self.qtgui_number_sink_0_2.set_min(i, 0)
            self.qtgui_number_sink_0_2.set_max(i, 8)
            self.qtgui_number_sink_0_2.set_color(i, colors[i][0], colors[i][1])
            if len(labels[i]) == 0:
                self.qtgui_number_sink_0_2.set_label(i, "Data {0}".format(i))
            else:
                self.qtgui_number_sink_0_2.set_label(i, labels[i])
            self.qtgui_number_sink_0_2.set_unit(i, units[i])
            self.qtgui_number_sink_0_2.set_factor(i, factor[i])

        self.qtgui_number_sink_0_2.enable_autoscale(True)
        self._qtgui_number_sink_0_2_win = sip.wrapinstance(self.qtgui_number_sink_0_2.qwidget(), Qt.QWidget)
        self.top_layout.addWidget(self._qtgui_number_sink_0_2_win)
        self.qtgui_number_sink_0_1 = qtgui.number_sink(
            gr.sizeof_float,
            0,
            qtgui.NUM_GRAPH_HORIZ,
            1,
            None # parent
        )
        self.qtgui_number_sink_0_1.set_update_time(0.10)
        self.qtgui_number_sink_0_1.set_title("Media")

        labels = ["Media acum", '', '', '', '',
            '', '', '', '', '']
        units = ['', '', '', '', '',
            '', '', '', '', '']
        colors = [("black", "black"), ("black", "black"), ("black", "black"), ("black", "black"), ("black", "black"),
            ("black", "black"), ("black", "black"), ("black", "black"), ("black", "black"), ("black", "black")]
        factor = [1, 1, 1, 1, 1,
            1, 1, 1, 1, 1]

        for i in range(1):
            self.qtgui_number_sink_0_1.set_min(i, 0)
            self.qtgui_number_sink_0_1.set_max(i, 8)
            self.qtgui_number_sink_0_1.set_color(i, colors[i][0], colors[i][1])
            if len(labels[i]) == 0:
                self.qtgui_number_sink_0_1.set_label(i, "Data {0}".format(i))
            else:
                self.qtgui_number_sink_0_1.set_label(i, labels[i])
            self.qtgui_number_sink_0_1.set_unit(i, units[i])
            self.qtgui_number_sink_0_1.set_factor(i, factor[i])

        self.qtgui_number_sink_0_1.enable_autoscale(True)
        self._qtgui_number_sink_0_1_win = sip.wrapinstance(self.qtgui_number_sink_0_1.qwidget(), Qt.QWidget)
        self.top_layout.addWidget(self._qtgui_number_sink_0_1_win)
        self.epy_block_2 = epy_block_2.blk()
        self.epy_block_1_0 = epy_block_1_0.blk()
        self.epy_block_0_0 = epy_block_0_0.blk()
        self.blocks_vector_source_x_1 = blocks.vector_source_f((0,0.587785252292473,0.951056516295154,0.951056516295154,0.587785252292473,1.22464679914735e-16,-0.587785252292473,-0.951056516295154,-0.951056516295154,-0.587785252292473,-2.44929359829471e-16,0.587785252292474,0.951056516295154,0.951056516295154,0.587785252292473,3.67394039744206e-16,-0.587785252292473,-0.951056516295154,-0.951056516295154,-0.587785252292473,-4.89858719658941e-16,0.587785252292473,0.951056516295154,0.951056516295153,0.587785252292472,6.12323399573677e-16,-0.587785252292473,-0.951056516295153,-0.951056516295154,-0.587785252292471,-7.34788079488412e-16,0.587785252292472,0.951056516295153,0.951056516295154,0.587785252292471,8.57252759403147e-16,-0.587785252292472,-0.951056516295153,-0.951056516295154,-0.587785252292471,-9.79717439317883e-16,0.587785252292475,0.951056516295153,0.951056516295154,0.587785252292471,1.10218211923262e-15,-0.587785252292475,-0.951056516295153,-0.951056516295153,-0.587785252292471,-1.22464679914735e-15,0.587785252292475,0.951056516295153,0.951056516295153,0.587785252292474,4.89982515786259e-15,-0.587785252292472,-0.951056516295154,-0.951056516295152,-0.587785252292471,-1.46957615897682e-15,0.587785252292475,0.951056516295153,0.951056516295153,0.587785252292474,-1.96067283990894e-15,-0.587785252292472,-0.951056516295154,-0.951056516295152,-0.587785252292472,-1.71450551880629e-15,0.587785252292475,0.951056516295153,0.951056516295153,0.587785252292475,5.38968387752153e-15,-0.587785252292472,-0.951056516295154,-0.951056516295152,-0.587785252292472,-1.95943487863577e-15,0.587785252292469,0.951056516295155,0.951056516295153,0.587785252292475,-1.47081412025e-15,-0.587785252292471,-0.951056516295154,-0.951056516295152,-0.587785252292472,-2.20436423846524e-15,0.587785252292468,0.951056516295155,0.951056516295153,0.587785252292475,5.87954259718047e-15,-0.587785252292477,-0.951056516295154,-0.951056516295152,-0.587785252292472,-2.44929359829471e-15,0.58778525229248,0.951056516295155,0.951056516295151,0.587785252292475,-9.80955400591059e-16,-0.587785252292477,-0.951056516295156,-0.951056516295154,-0.587785252292472,-9.79965031572518e-15,0.58778525229248,0.951056516295153,0.951056516295153,0.58778525229247,6.36940131683941e-15,-0.587785252292482,-0.951056516295154,-0.951056516295152,-0.587785252292478,-2.93915231795365e-15,0.587785252292474,0.951056516295155,0.951056516295151,0.587785252292476,-4.91096680932118e-16,-0.587785252292476,-0.951056516295156,-0.951056516295155,-0.587785252292473,3.92134567981788e-15,0.587785252292479,0.951056516295153,0.951056516295154,0.58778525229247,6.85926003649835e-15,-0.587785252292482,-0.951056516295154,-0.951056516295152,-0.587785252292479,-3.42901103761259e-15,0.587785252292473,0.951056516295155,0.951056516295151,0.587785252292476,-1.23796127317672e-18,-0.587785252292476,-0.951056516295156,-0.951056516295155,-0.587785252292473,-1.07793677550431e-14,0.587785252292479,0.951056516295152,0.951056516295154,0.58778525229247,7.3491187561573e-15,-0.587785252292482,-0.951056516295154,-0.951056516295153,-0.587785252292479,-3.91886975727153e-15,0.587785252292473,0.95105651629515,0.951056516295152,0.587785252292465,4.88620758385765e-16,-0.587785252292476,-0.951056516295151,-0.951056516295155,-0.587785252292462,2.9416282405e-15,0.587785252292478,0.951056516295152,0.951056516295154,0.587785252292471,7.83897747581624e-15,-0.587785252292481,-0.951056516295149,-0.951056516295153,-0.587785252292468,-4.40872847693047e-15,0.587785252292472,0.95105651629515,0.951056516295152,0.587785252292465,9.78479478044706e-16,-0.587785252292475,-0.951056516295151,-0.951056516295155,-0.587785252292462,-1.17590851943609e-14,0.587785252292478,0.951056516295157,0.951056516295154,0.587785252292471,8.32883619547518e-15,-0.587785252292481,-0.951056516295158,-0.951056516295153,-0.587785252292468,-4.89858719658941e-15,0.587785252292472,0.951056516295159,0.951056516295152,0.587785252292466,1.56791929129057e-14,-0.587785252292486,-0.95105651629516,-0.951056516295155,-0.587785252292474,1.96191080118212e-15,0.587785252292478,0.951056516295156,0.95105651629515,0.58778525229246,8.81869491513412e-15,-0.587785252292469,-0.951056516295162,-0.951056516295153,-0.587785252292469,-1.95993006314504e-14,0.587785252292483,0.951056516295159,0.951056516295156,0.587785252292478,1.95819691736259e-15,-0.587785252292474,-0.951056516295155,-0.951056516295151,-0.587785252292463,-1.27388026336788e-14,0.587785252292466,0.951056516295161,0.951056516295154,0.587785252292472,-4.90230108040894e-15,-0.58778525229248,-0.951056516295157,-0.951056516295158,-0.587785252292458,-5.8783046359073e-15,0.587785252292471,0.951056516295154,0.951056516295152,0.587785252292466,1.66589103522235e-14,-0.587785252292485,-0.951056516295159,-0.951056516295155,-0.587785252292475,9.82193361864236e-16,0.587785252292477,0.951056516295156,0.95105651629515,0.587785252292461,9.798412354452e-15,-0.587785252292468,-0.951056516295162,-0.951056516295153,-0.58778525229247,7.84269135963577e-15,0.587785252292482,0.951056516295158,0.951056516295157,0.587785252292478,2.93791435668047e-15,-0.587785252292474,-0.951056516295155,-0.951056516295151,-0.587785252292464,-1.37185200729967e-14,0.587785252292465,0.95105651629516,0.951056516295155,0.587785252292473,-3.92258364109106e-15,-0.587785252292479,-0.951056516295157,-0.951056516295158,-0.587785252292458,-6.85802207522518e-15,0.58778525229247,0.951056516295154,0.951056516295152,0.587785252292467,1.76386277915414e-14,-0.587785252292485,-0.951056516295159,-0.951056516295156,-0.587785252292476,2.47592254635343e-18,0.587785252292476,0.951056516295156,0.95105651629515,0.587785252292462,1.07781297937699e-14,-0.587785252292467,-0.951056516295161,-0.951056516295154,-0.58778525229247,-2.15587355100861e-14,0.587785252292482,0.951056516295158,0.951056516295157,0.587785252292479,3.91763179599835e-15,-0.587785252292473,-0.951056516295155,-0.951056516295152,-0.587785252292465,-1.46982375123146e-14,0.587785252292464,0.95105651629516,0.951056516295155,0.587785252292474,-2.94286620177318e-15,-0.587785252292478,-0.951056516295157,-0.951056516295158,-0.587785252292459,-7.83773951454306e-15,0.58778525229247,0.951056516295153,0.951056516295144,0.587785252292491,1.86183452308593e-14,-0.587785252292484,-0.951056516295159,-0.951056516295147,-0.587785252292477,-9.77241516771529e-16,0.587785252292475,0.951056516295155,0.951056516295151,0.587785252292485,1.17578472330878e-14,-0.587785252292466,-0.951056516295161,-0.951056516295145,-0.587785252292494,5.883256481e-15,0.587785252292481,0.951056516295158,0.951056516295149,0.58778525229248,4.89734923531624e-15,-0.587785252292472,-0.951056516295154,-0.951056516295152,-0.587785252292489,-1.56779549516325e-14,0.587785252292463,0.95105651629516,0.951056516295146,0.587785252292497,-1.9631487624553e-15,-0.587785252292478,-0.951056516295156,-0.95105651629515,-0.587785252292483,-8.81745695386094e-15,0.587785252292469,0.951056516295153,0.951056516295144,0.587785252292492,1.95980626701772e-14,-0.587785252292483,-0.951056516295159,-0.951056516295148,-0.587785252292478,-1.95695895608941e-15,0.587785252292474,0.951056516295155,0.951056516295151,0.587785252292486,1.27375646724056e-14,-0.587785252292466,-0.951056516295161,-0.951056516295145,-0.587785252292495,-2.35181703887219e-14,0.58778525229248,0.951056516295157,0.951056516295149,0.587785252292458,5.87706667463412e-15,-0.587785252292471,-0.951056516295154,-0.951056516295152,-0.587785252292443,-1.66576723909504e-14,0.587785252292462,0.951056516295159,0.951056516295147,0.587785252292452,-9.83431323137413e-16,-0.587785252292477,-0.951056516295156,-0.95105651629515,-0.587785252292461,-9.79717439317883e-15,0.587785252292468,0.951056516295153,0.951056516295145,0.587785252292447,2.05777801094951e-14,-0.587785252292482,-0.951056516295158,-0.951056516295148,-0.587785252292432,-3.13583858258113e-14,0.587785252292474,0.951056516295164,0.951056516295151,0.587785252292441,-1.47044273186805e-14,-0.587785252292465,-0.95105651629516,-0.951056516295155,-0.58778525229245,3.92382160236424e-15,0.587785252292456,0.951056516295157,0.95105651629514,0.587785252292458,6.856784113952e-15,-0.587785252292493,-0.951056516295154,-0.951056516295144,-0.587785252292467,-1.76373898302682e-14,0.587785252292485,0.95105651629515,0.951056516295147,0.58778525229243,2.84179955465845e-14,-0.587785252292476,-0.951056516295165,-0.95105651629515,-0.587785252292439,-3.91986012629007e-14,0.587785252292467,0.951056516295161,0.951056516295154,0.587785252292447,-6.86421188159106e-15,-0.587785252292458,-0.951056516295158,-0.951056516295157,-0.587785252292456,-3.91639383472518e-15,0.58778525229245,0.951056516295155,0.951056516295143,0.587785252292465,1.46969995510414e-14,-0.587785252292487,-0.951056516295151,-0.951056516295146,-0.587785252292474,-2.54776052673577e-14,0.587785252292478,0.951056516295148,0.951056516295149,0.587785252292436,3.62582109836739e-14,-0.58778525229247,-0.951056516295162,-0.951056516295153,-0.587785252292445,9.80460216081789e-15,0.587785252292461,0.951056516295159,0.951056516295156,0.587785252292454,9.76003555498352e-16,-0.587785252292452,-0.951056516295155,-0.951056516295142,-0.587785252292462,-1.17566092718146e-14,0.587785252292489,0.951056516295152,0.951056516295145,0.587785252292471,2.25372149881308e-14,-0.587785252292481,-0.951056516295149,-0.951056516295149,-0.587785252292434,-3.33178207044471e-14,0.587785252292472,0.951056516295163,0.951056516295152,0.587785252292443,-1.27449924400447e-14,-0.587785252292463,-0.95105651629516,-0.951056516295155,-0.587785252292451), True, 1, [])
        self.blocks_vector_source_x_0 = blocks.vector_source_f((0.000200113940055307,0.00014440624344565,6.0975847227686e-05,-5.46014036076452e-05,-0.000204878638034827,-0.000389693367393234,-0.000605515156760819,-0.000845073566614587,-0.0010973383739139,-0.00134789985377776,-0.00157976454509979,-0.00177454265752001,-0.00191395970878005,-0.0019815811483561,-0.00196459984198519,-0.00185550816670283,-0.00165346461180738,-0.00136517340569841,-0.00100512675009838,-0.000595111797051836,-0.000162954497343012,0.000259446975251974,0.000638664251813284,0.000942647135539775,0.00114373266738037,0.00122145825287278,0.00116488206190405,0.000974146570954971,0.00066108481999859,0.000248758224861699,-0.000230079146238615,-0.000735483266907812,-0.00122357844230086,-0.00165027403648616,-0.00197508611570448,-0.00216469078181463,-0.00219585604870782,-0.00205745754562383,-0.00175137427968215,-0.0012921745930451,-0.000705627109905991,-2.61934024829646e-05,0.00070623499746316,0.00145001447050304,0.00216545975231623,0.00281820467003965,0.00338187295196471,0.00383979868501191,0.00418564482251067,0.00442289372035233,0.00456331145220758,0.00462460249040075,0.00462755938569609,0.00459306258315741,0.00453929232767813,0.004479477155928,0.00442042691696455,0.00436199292969834,0.00429747785415991,0.00421489902357234,0.00409890683677757,0.00393308722826981,0.00370234270831022,0.00339505297906624,0.00300476087828233,0.00253120439372679,0.00198060893859365,0.00136525227827014,0.000702403922614835,1.28100182091053e-05,-0.000681064038721584,-0.00135681126241814,-0.0019936793569625,-0.00257382906809958,-0.00308315947531173,-0.00351167272538253,-0.00385341439399119,-0.00410607663770059,-0.0042703834067176,-0.00434938741896758,-0.00434779807845636,-0.00427143194907586,-0.00412683895989059,-0.00392111552130566,-0.00366187730953036,-0.0033573354765104,-0.00301640424149474,-0.00264876657616781,-0.00226483700370197,-0.00187558340094141,-0.00149219871740396,-0.00112564356975896,-0.0007861065955804,-0.000482446835148157,-0.000221688231169623,-8.62951249527386e-06,0.000154385581516236,0.000267519242406115,0.000333322808098435,0.00035649026945816,0.000343538743343811,0.000302478817049617,0.000242529559864927,0.000173911403208241,0.000107718621780369,5.58376572181464e-05,3.08451706996274e-05,4.57977481643512e-05,0.000113819682155407,0.00024740994513233,0.000457424888816178,0.000751746312314292,0.00113370886396827,0.00160042705724378,0.00214121969459216,0.00273636736843054,0.00335644776873558,0.00396246788160763,0.00450695049003691,0.00493603863219083,0.00519256500348532,0.00521990726839201,0.0049663312853954,0.00438942952289843,0.00346020705160275,0.00216636412352442,0.000514378261624767,-0.00146990153061499,-0.00374227970146096,-0.00624280355345915,-0.00889966908468072,-0.011634020010416,-0.0143650850657392,-0.0170150323591609,-0.0195129330883569,-0.0217973250122449,-0.0238170419592341,-0.0255302112032664,-0.0269015879021039,-0.0278986605838057,-0.02848718728123,-0.0286269743452287,-0.0282687624938693,-0.0273530217634721,-0.0258112770760641,-0.0235703024307024,-0.0205591618237885,-0.0167186782761926,-0.0120125259399355,-0.00643881383622241,-4.08095522999134e-05,0.00708462603698658,0.0147822342202627,0.0228382690693347,0.0309858004449588,0.0389155638333789,0.0462919267831338,0.0527729592536368,0.0580330828669268,0.0617863954271837,0.0638085732164018,0.0639552760984739,0.0621752266453203,0.0585165853211623,0.0531258552668581,0.0462392581455556,0.0381672496627283,0.0292735089235518,0.0199502651629946,0.0105921595065571,0.00157094204776767,-0.00678683334513939,-0.0142173133175452,-0.0205307812255084,-0.0256164065654331,-0.029440374337847,-0.0320381056774195,-0.0335018148790261,-0.0339650166631736,-0.0335857688012085,-0.0325304016716887,-0.0309592652392753,-0.0290156538424294,-0.0268186037051668,-0.0244597583970689,-0.0220040240715717,-0.019493341676814,-0.01695262606752,-0.0143967832745243,-0.0118377199238216,-0.00929038872599876,-0.00677714321102035,-0.00432996665539077,-0.00199045400333611,0.000192277376209051,0.00216532498718682,0.00387678977280782,0.00528093198959948,0.00634301143696893,0.00704320975104985,0.00737917611053177,0.00736692228930839,0.00703999422413469,0.00644704153819311,0.00564807336214827,0.00470981290846006,0.00370063517668515,0.00268558875702079,0.00172196670022661,0.000855810589867568,0.000119617834971474,-0.000468611302221438,-0.000904988600115778,-0.00119814515551548,-0.00136666892838772,-0.00143588749936694,-0.00143435239413941,-0.00139038565461738,-0.00132901879431223,-0.00126959416845431,-0.00122421674357519,-0.00119714933804521,-0.00118514624652248,-0.0011786280822912,-0.00116352295108406,-0.00112354232075811,-0.00104262863600241,-0.000907307820844498,-0.000708702630835667,-0.00044400905976486,-0.000117302041487417,0.000260388889132944,0.000671716879054482,0.0010942808147187,0.00150237059728153,0.00186901370169647,0.00216812637952211,0.00237657854930063,0.00247600547966716,0.00245423670562643,0.00230625699474962,0.00203465933400678,0.00164959057783041,0.00116822309148751,0.000613809071636559,1.43888610348729e-05,-0.000598767410252708,-0.00119290138628019,-0.00173560499422722,-0.00219666663679108,-0.00254983234919323,-0.002774386464747,-0.00285645650209421,-0.0027899526416946,-0.00257706551620124,-0.0022282682706107,-0.0017617996140247,-0.00120264187897633,-0.00058104843132771,6.92863720027537e-05,0.000713288917776045,0.00131665206623983,0.00184790895369461,0.00228028570805822,0.00259320487946901,0.00277334383508756,0.00281519216230567,0.00272109445762555,0.00250080508512676,0.00217061574221539,0.00175214240481555,0.00127087423226119,0.000754593274143314,0.000231771187801268,-0.000269960953290867,-0.000725189579236312,-0.00111188182810547,-0.00141229608052683,-0.00161362194262253,-0.00170835036178683,-0.00169438886530371,-0.00157494584872142,-0.00135821122355096,-0.0010568594338002,-0.000687396712021385,-0.000269369952962888,0.000175547670451488,0.000624577161148594,0.00105493565827858,0.00144498309565059,0.00177536158251836,0.00203006061930671,0.00219733045655403,0.00227036297398893,0.00224766724959697,0.00213308670148552,0.00193543536512732,0.00166776930435413,0.00134635022736661,0.00098939584653526,0.000615739105620484,0.000243530967304695,-0.000110883953690052,-0.000433813133236578,-0.00071471618882065,-0.000946340529204577,-0.00112452450964548,-0.00124774485241352,-0.00131651688437315,-0.00133276959788013,-0.00129931038863656,-0.00121946778252208,-0.00109695910240497,-0.00093598102317022,-0.00074147288542198,-0.000519463971809334,-0.000277393643661564,-2.42915035434386e-05,0.000229275676684204,0.000471545570067621,0.000690195582914319,0.000873222944685021,0.00100997212678488,0.00109217741355436,0.0011148739153428,0.00107703891423008,0.000981856308384825,0.00083654554440856,0.000651755383136464,0.000440583079864948,0.00021733187677689,-3.84376192795978e-06,-0.000210240309046131,-0.000391697532860018,-0.000541353110097968,-0.000655977704628723,-0.000735864810318614,-0.000784307569758338,-0.000806746558863339,-0.000809711505778639,-0.000799701576074277,-0.000782151289588166,-0.000760613047893783,-0.000736255640929428,-0.000707735649391503,-0.000671451004216344,-0.000622138947095871,-0.000553739614645574,-0.000460415766046001,-0.000337601706333363,-0.000182951568443384,2.93140528051335e-06,0.000216078708203566,0.000449113445434634,0.000691599561689357,0.000930759952194605,0.00115249931844711,0.00134263321046672,0.00148820009320608,0.00157872115295497,0.00160727439899878,0.00157126551392052,0.00147280651625828,0.00131865192835482,0.00111968700211263,0.000890009133068063,0.000645687084998013,0.000403318410569653,0.000178529448123903,-1.54285227532038e-05,-0.000168840609757943,-0.000276324370768662,-0.000337175950909794,-0.000355230466722938,-0.000338255067539062,-0.000296946410434622,-0.000243649973994171,-0.000190950658820265,-0.000150297967769344,-0.00013082252282827,-0.00013847433148929,-0.000175570458647141,-0.000240786383614842,-0.000329568676776907,-0.000434894514827858,-0.000548263028283917,-0.000660779804225844,-0.000764191753833512,-0.000851744787764557,-0.00091876831407227,-0.000962933236944845,-0.00098417731474084,-0.000984336617130362,-0.000966558410823202,-0.000934594770273242,-0.000892085365289789,-0.000841932256770222,-0.000785851120280141,-0.000724155524088022,-0.000655797893285283,-0.000578656896065228,-0.000490030079143107,-0.000387265770826593,-0.000268451728684139,-0.000133070923738048,1.74625009632871e-05,0.000179462224437982,0.00034687905507884,0.000511490098729325,0.000663367895761964,0.000791599396626976,0.000885196638735452,0.000934118158722998,0.000930305029337397,0.000868629670359972,0.000747659934844116,0.000570154983610081,0.000343231677153832,7.81683950210078e-05,-0.000210155368335575,-0.00050415342664608,-0.000784701552029866,-0.00103249555678032,-0.0012294954194788,-0.00136034120110995,-0.00141362418191808,-0.00138290327944322,-0.00126737236765999,-0.0010721081550569,-0.000807859805720919,-0.000490378813338086,-0.000139328216291135,0.000223149396621144,0.000574089745308699,0.000891448415555976,0.00115577046582212,0.00135163537102365,0.00146874501895209,0.00150255892756105,0.00145442922660713,0.00133124196154906,0.00114462342492924,0.000909813077199756,0.000644332231029026,0.000366586711624726,9.45321149946576e-05,-0.000155494740128732,-0.000369709295771288,-0.00053754618217212,-0.000652061273133592,-0.00071009426106648,-0.000712228726518318,-0.000662586472718498,-0.00056848393572358,-0.000439965597953946,-0.000289217912628573,-0.000129861925453846,2.38736148924404e-05,0.000158083920441791,0.000260189624547326,0.00031994954907837,0.000330404628144854,0.000288658217124775,0.000196394681611025,6.00486576766337e-05,-0.000109437898902251,-0.00029729663644698,-0.000486031785464383,-0.000656868366405427,-0.000791434828124995,-0.00087352847261151,-0.00089078973818938,-0.000836107609818895,-0.000708594894797663,-0.000514008147436457,-0.000264539417700702,2.20297035334809e-05,0.000323754066257173,0.000616409862158625,0.000875665056447749,0.00107932699405464,0.00120944537188515,0.0012540586195454,0.00120840408414644,0.0010754640068577,0.000865784758857321,0.000596579320693651,0.000290194929476278,-2.79083720989017e-05,-0.000331473560463382,-0.000595833044339481,-0.000800135741713615,-0.000929202231202293,-0.000974834239050699,-0.000936460805160161,-0.000821070627190273,-0.00064245097245292,-0.00041982052691891,-0.000175999601216166,6.46993071041835e-05), True, 1, [])
        self.blocks_multiply_const_vxx_0_1 = blocks.multiply_const_ff(0.2)
        self.blocks_multiply_const_vxx_0_0 = blocks.multiply_const_ff(10)
        self.blocks_multiply_const_vxx_0 = blocks.multiply_const_ff(1000)
        self.blocks_add_xx_0 = blocks.add_vff(1)


        ##################################################
        # Connections
        ##################################################
        self.connect((self.blocks_add_xx_0, 0), (self.epy_block_0_0, 0))
        self.connect((self.blocks_add_xx_0, 0), (self.qtgui_time_sink_x_0_0, 0))
        self.connect((self.blocks_multiply_const_vxx_0, 0), (self.blocks_add_xx_0, 0))
        self.connect((self.blocks_multiply_const_vxx_0, 0), (self.qtgui_time_sink_x_0, 0))
        self.connect((self.blocks_multiply_const_vxx_0_0, 0), (self.blocks_add_xx_0, 1))
        self.connect((self.blocks_multiply_const_vxx_0_0, 0), (self.qtgui_time_sink_x_0_0_1, 0))
        self.connect((self.blocks_multiply_const_vxx_0_1, 0), (self.epy_block_2, 0))
        self.connect((self.blocks_multiply_const_vxx_0_1, 0), (self.qtgui_time_sink_x_0_0_0, 0))
        self.connect((self.blocks_vector_source_x_0, 0), (self.blocks_multiply_const_vxx_0, 0))
        self.connect((self.blocks_vector_source_x_1, 0), (self.blocks_multiply_const_vxx_0_0, 0))
        self.connect((self.epy_block_0_0, 0), (self.epy_block_1_0, 0))
        self.connect((self.epy_block_1_0, 0), (self.blocks_multiply_const_vxx_0_1, 0))
        self.connect((self.epy_block_2, 0), (self.qtgui_number_sink_0_1, 0))
        self.connect((self.epy_block_2, 1), (self.qtgui_number_sink_0_2, 0))
        self.connect((self.epy_block_2, 2), (self.qtgui_number_sink_2, 0))
        self.connect((self.epy_block_2, 3), (self.qtgui_number_sink_3, 0))
        self.connect((self.epy_block_2, 4), (self.qtgui_number_sink_4, 0))


    def closeEvent(self, event):
        self.settings = Qt.QSettings("gnuradio/flowgraphs", "Practica1")
        self.settings.setValue("geometry", self.saveGeometry())
        self.stop()
        self.wait()

        event.accept()

    def get_samp_rate(self):
        return self.samp_rate

    def set_samp_rate(self, samp_rate):
        self.samp_rate = samp_rate
        self.qtgui_time_sink_x_0.set_samp_rate(self.samp_rate*3)
        self.qtgui_time_sink_x_0_0.set_samp_rate(self.samp_rate*3)
        self.qtgui_time_sink_x_0_0_0.set_samp_rate(self.samp_rate*3)
        self.qtgui_time_sink_x_0_0_1.set_samp_rate(self.samp_rate*3)

    def get_puntos(self):
        return self.puntos

    def set_puntos(self, puntos):
        self.puntos = puntos




def main(top_block_cls=Practica1, options=None):

    qapp = Qt.QApplication(sys.argv)

    tb = top_block_cls()

    tb.start()
    tb.flowgraph_started.set()

    tb.show()

    def sig_handler(sig=None, frame=None):
        tb.stop()
        tb.wait()

        Qt.QApplication.quit()

    signal.signal(signal.SIGINT, sig_handler)
    signal.signal(signal.SIGTERM, sig_handler)

    timer = Qt.QTimer()
    timer.start(500)
    timer.timeout.connect(lambda: None)

    qapp.exec_()

if __name__ == '__main__':
    main()
